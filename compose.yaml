networks:
  net:

volumes:
  certs:

services:
  # db migrations
  migrations:
    image: ghcr.io/teamhanko/hanko:v2.1.0
    volumes:
      - ./config.yaml:/etc/config/config.yaml
    command: --config /etc/config/config.yaml migrate up
    depends_on:
      db:
        condition: service_healthy
    networks:
      - net
    restart: "on-failure:2"

  # the main hanko service
  hanko:
    depends_on:
      migrations:
        condition: service_completed_successfully
    image: ghcr.io/teamhanko/hanko:v2.1.0
    command: serve --config /etc/config/config.yaml all
    volumes:
      - ./config.yaml:/etc/config/config.yaml
    networks:
      - net
    environment:
      - PASSWORD_ENABLED
    restart: unless-stopped
    labels:
      traefik.enable: 'true'
      traefik.http.routers.hanko.rule: 'Host(`login.hotosm.org`)'
      traefik.http.routers.hanko.entrypoints: https
      traefik.http.routers.hanko.tls: 'true'
      traefik.http.routers.hanko.tls.options: 'default'
      traefik.http.routers.hanko.tls.certresolver: letsencrypt
      traefik.http.services.hanko.loadbalancer.server.port: '8000'

  # the hanko data
  db:
    image: postgres:17-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-hanko}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-hanko}
      - POSTGRES_DB=${POSTGRES_DB:-hanko}
    healthcheck:
      test: pg_isready -U hanko -d hanko
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - net
    restart: unless-stopped

  # reverse proxy for load balance and certs
  traefik:
    image: 'traefik:v3.4.3'
    container_name: 'traefik'
    volumes:
      - certs:/letsencrypt
      # We run rootless as user 1000!
      - /var/run/user/1000/docker.sock:/var/run/user/1000/docker.sock:ro
    networks:
      - net
    labels:
      traefik.enable: 'false'  # no dashboard
    ports:
      - '80:80'
      - '443:443'
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.endpoint=unix:///var/run/user/1000/docker.sock"
      - "--entrypoints.http=true"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.http.http.redirections.entrypoint.to=https"
      - "--entrypoints.http.http.redirections.entrypoint.scheme=https"
      - "--entryPoints.https.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      # For staging test
      # - "--certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.letsencrypt.acme.email=sysadmin@hotosm.org"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    restart: unless-stopped

  elements:
    image: ghcr.io/teamhanko/hanko/elements:v2.1.0
    networks:
      - net
    restart: unless-stopped
    labels:
      traefik.enable: 'true'
      traefik.http.routers.hanko-elements.rule: 'Host(`login.hotosm.org`) && PathPrefix(`/elements`)'
      traefik.http.routers.hanko-elements.entrypoints: https
      traefik.http.routers.hanko-elements.tls: 'true'
      traefik.http.routers.hanko-elements.tls.options: 'default'
      traefik.http.routers.hanko-elements.tls.certresolver: letsencrypt
      traefik.http.services.hanko-elements.loadbalancer.server.port: '80'
      traefik.http.routers.elements.middlewares: strip-elements
      traefik.http.middlewares.strip-elements.stripprefix.prefixes: /elements

  quickstart:
    image: ghcr.io/teamhanko/hanko/quickstart:v2.1.0
    environment:
      - HANKO_URL=https://login.hotosm.org
      - HANKO_URL_INTERNAL=http://hanko:8000
      - HANKO_ELEMENT_URL=https://login.hotosm.org/elements/elements.js
      - HANKO_FRONTEND_SDK_URL=https://login.hotosm.org/elements/sdk.modern.js
    networks:
      - net
    restart: unless-stopped
    labels:
      traefik.enable: 'true'
      traefik.http.routers.hanko-demo.rule: 'Host(`login.hotosm.org`) && PathPrefix(`/demo`)'
      traefik.http.routers.hanko-demo.entrypoints: https
      traefik.http.routers.hanko-demo.tls: 'true'
      traefik.http.routers.hanko-demo.tls.options: 'default'
      traefik.http.routers.hanko-demo.tls.certresolver: letsencrypt
      traefik.http.services.hanko-demo.loadbalancer.server.port: '8080'
      traefik.http.routers.quickstart.middlewares: strip-demo
      traefik.http.middlewares.strip-demo.stripprefix.prefixes: /demo
